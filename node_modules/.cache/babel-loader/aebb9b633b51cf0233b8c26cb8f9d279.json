{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const exsistingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!exsistingItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        exsistingItem.quantity++;\n        exsistingItem.totalPrice = exsistingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeFromCard(state, action) {\n      const id = action.payload;\n      const exsistingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n\n      if (exsistingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        exsistingItem.quantity--;\n        exsistingItem.totalPrice = exsistingItem.totalPrice - exsistingItem.price;\n      }\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"sources":["C:/Users/Dzigi/Downloads/fajl/01-starting-project/src/components/store/cart-slice.js"],"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducers","addToCart","state","action","newItem","payload","exsistingItem","find","item","id","push","itemId","price","quantity","totalPrice","title","removeFromCard","filter","cartActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC5BE,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,KAAK,EAAE,EADK;AAEZC,IAAAA,aAAa,EAAE;AAFH,GAFc;AAM5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACrB,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,aAAa,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA7C,CAAtB;AACAP,MAAAA,KAAK,CAACH,aAAN;;AACA,UAAG,CAACO,aAAJ,EAAkB;AACdJ,QAAAA,KAAK,CAACJ,KAAN,CAAYY,IAAZ,CAAiB;AACbC,UAAAA,MAAM,EAAEP,OAAO,CAACK,EADH;AACOG,UAAAA,KAAK,EAAER,OAAO,CAACQ,KADtB;AAC6BC,UAAAA,QAAQ,EAAE,CADvC;AAC0CC,UAAAA,UAAU,EAAEV,OAAO,CAACQ,KAD9D;AACqEhB,UAAAA,IAAI,EAACQ,OAAO,CAACW;AADlF,SAAjB;AAGH,OAJD,MAIM;AACFT,QAAAA,aAAa,CAACO,QAAd;AACAP,QAAAA,aAAa,CAACQ,UAAd,GAA2BR,aAAa,CAACQ,UAAd,GAA2BV,OAAO,CAACQ,KAA9D;AACH;AACJ,KAbO;;AAcRI,IAAAA,cAAc,CAACd,KAAD,EAAOC,MAAP,EAAe;AAC5B,YAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;AACA,YAAMC,aAAa,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAArC,CAAtB;AACAP,MAAAA,KAAK,CAACH,aAAN;;AACA,UAAGO,aAAa,CAACO,QAAd,KAA2B,CAA9B,EAAgC;AAC9BX,QAAAA,KAAK,CAACJ,KAAN,GAAcI,KAAK,CAACJ,KAAN,CAAYmB,MAAZ,CAAmBT,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAAd;AACD,OAFD,MAEK;AACDH,QAAAA,aAAa,CAACO,QAAd;AACAP,QAAAA,aAAa,CAACQ,UAAd,GAA2BR,aAAa,CAACQ,UAAd,GAA2BR,aAAa,CAACM,KAApE;AACH;AACD;;AAxBO;AANkB,CAAD,CAA7B;AAiCA,OAAO,MAAMM,WAAW,GAAGvB,SAAS,CAACwB,OAA9B;AAEP,eAAexB,SAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    items: [],\r\n    totalQuantity: 0,\r\n  },\r\n  reducers: {\r\n    addToCart(state, action) {\r\n        const newItem = action.payload;\r\n        const exsistingItem = state.items.find(item => item.id === newItem.id)\r\n        state.totalQuantity++;\r\n        if(!exsistingItem){\r\n            state.items.push({\r\n                itemId: newItem.id, price: newItem.price, quantity: 1, totalPrice: newItem.price, name:newItem.title\r\n            })\r\n        }else {\r\n            exsistingItem.quantity++;\r\n            exsistingItem.totalPrice = exsistingItem.totalPrice + newItem.price;\r\n        }\r\n    },\r\n    removeFromCard(state,action) {\r\n     const id = action.payload;\r\n     const exsistingItem = state.items.find(item => item.id === id);\r\n     state.totalQuantity--;\r\n     if(exsistingItem.quantity === 1){\r\n       state.items = state.items.filter(item => item.id !== id)\r\n     }else{\r\n         exsistingItem.quantity--;\r\n         exsistingItem.totalPrice = exsistingItem.totalPrice - exsistingItem.price;\r\n     }\r\n    },\r\n  },\r\n});\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;"]},"metadata":{},"sourceType":"module"}